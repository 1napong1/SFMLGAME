Player.h

#pragma once
#include "Entity.h"

class Player
{

private:
	sf::Sprite player;
	sf::Texture playerTex;

	void initSprite();

public:
	Player();
	~Player();

	//Functions
	void move();
	void update();
	void render(sf::RenderTarget* target);


};

//////////////////////////////////

Player.cpp

#include "Player.h"

void Player::initSprite()
{
	this->playerTex.loadFromFile("allpic/player.png");
	this->player.setTexture(this->playerTex);
}

Player::Player()
{
	this->initSprite();
}

Player::~Player()
{

}

void Player::move()
{
	if (sf::Keyboard::isKeyPressed(sf::Keyboard::A))
		this->player.move(-1.f, 0.f);
	
	else if (sf::Keyboard::isKeyPressed(sf::Keyboard::D))
		this->player.move(+1.f, 0.f);

	if (sf::Keyboard::isKeyPressed(sf::Keyboard::W))
		this->player.move(0.f, -1.f);
	
	else if (sf::Keyboard::isKeyPressed(sf::Keyboard::S))
		this->player.move(0.f, +1.f);

}

void Player::update()
{
	this->move();
}

void Player::render(sf::RenderTarget* target)
{
	target->draw(this->player);
}

